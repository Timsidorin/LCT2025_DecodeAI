
services:
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      CLUSTER_ID: 'my-local-cluster'
      KAFKA_LISTENERS: 'PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
    volumes:
      - kafka-data:/var/lib/kafka/data
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: unless-stopped

  # Auth Service
  auth-service:
    build:
      context: .
      dockerfile: ./auth_service/Dockerfile
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Data Mining Service
  data-mining-service:
    build:
      context: .
      dockerfile: ./data_mining_service/Dockerfile
    env_file:
      - .env
    depends_on:
      - kafka
      - auth-service
    restart: unless-stopped
    volumes:
      - ./logs:/data_mining_service/logs

  # ML Processing Service
  ml-service:
    build:
      context: .
      dockerfile: ./ml_service/Dockerfile
    env_file:
      - .env
    depends_on:
      - kafka
      - auth-service
    restart: unless-stopped
    volumes:
      - ./ml_models:/ml_service/models
      - ./logs:/ml_service/logs

volumes:
  kafka-data:
